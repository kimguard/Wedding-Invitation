var aniPath = motion['path'];
var lastAni = motion['frames'];
var filename = motion['filename'] ? motion['filename'] : 'loop';
var mapWidth, mapHeight, isRetina, isSolvedRetina, isControlMap;
var mapName = wMap['from'];
var galleryType = galleryTypeNum;
var naviDelay = 10;
var naviDelayCnt;
var seledConnect = '';
var navigationFn;
var bgmType = bgmNum;
var isBgmAutoplay = (bgmType) ? isBgmAuto: false;
var bgm, bgmBtn;
var canBgmPlayThrough, isBgmPlaying = false;
var bgmFirstNoticeTime = 3000;
$(document).ready(function () {
	// isRetina = false;
	// isSolvedRetina = false;
	// isControlMap = false;
	// naviDelayCnt = 0;
	// initScreen();
	// initScreenGb();
	// adjustRetina();
	// $('img').load(function () {
	// 	if (isSolvedRetina && !$(this).hasClass('retina')) {
	// 		if (!$(this).hasClass('fit_width') && !$(this).hasClass('svg')) {
	// 			var a = this.naturalWidth;
	// 			var b = this.naturalHeight;
	// 			if (galleryType == 2) {}
	// 			if (isRetina) {
	// 				a = this.naturalWidth * 0.5;
	// 				b = this.naturalHeight * 0.5
	// 			}
	// 			$(this).attr({
	// 				'width': a,
	// 				'height': b
	// 			})
	// 		}
	// 	}
	// })
});
window.onload = function () {
    console.log("1");
	var e = $('.group_location .div_traffic');
	var f = $('.group_location .div_traffic>img');
	if (e.css('width') < f.css('width')) {
		e.css('width', f.css('width'))
	}
	console.log("2");
	// $("#group_navi ul").mouseout(function () {
	// 	naviDelayCnt = naviDelay
	// }).mouseover(function () {
	// 	naviDelayCnt = naviDelay
	// });
	// $(document).on("scroll", function () {
	// 	if ($('#group_navi').css('display') == 'none') {
	// 		$('#group_navi').fadeIn('fast');
	// 		$('#group_bgm>div').fadeIn('fast')
	// 	}
	// 	if (naviDelayCnt < naviDelay) {
	// 		naviDelayCnt = naviDelay
	// 	}
	// 	closePopup()
	// });
	if (wMap['type']) {
		settingButtons();
		if (!wMap['isImgFirst']) {
			chageMap()
		}
	}
    console.log("3");
	// if (noValue(motion['type']) || noValue(aniPath) || noValue(lastAni)) {
	// 	$('#animationBg').remove()
	// } else {
	// 	readyAni(aniPath, filename)
	// }
	// var g = 100;
	// (function loopFunction() {
	// 	if (wMap['type']) {
	// 		if ($('.exMap').css('display') != 'none') {
	// 			var a = $('.exMap #' + mapName + 'Map').css('width');
	// 			setControlMapSize();
	// 			if (a != (mapWidth + 'px')) controlMapLoad()
	// 		}
	// 	}
	// 	if (naviDelayCnt != 0) {
	// 		if (naviDelayCnt > 1) {
	// 			naviDelayCnt -= 1
	// 		} else {
	// 			if (naviDelayCnt == 1) {
	// 				$('#group_navi').fadeOut('fast');
	// 				$('#group_bgm>div').fadeOut('fast')
	// 			}
	// 			naviDelayCnt = 0
	// 		}
	// 	}
	// 	g++;
	// 	if (g > 100) {
	// 		var b = new Date();
	// 		g = 0;
	// 		var c = ddayNum;
	// 		if (ddayNum > 0) {
	// 			if (ddayNum > 0 && ddayNum <= 7) {
	// 				if (notiOnce['beforeDay']) {
	// 					notiOnce['beforeDay'] = false;
	// 					ddayTopNotice(subject, ddayNum)
	// 				}
	// 			}
	// 			if (ddayCheck(b)) {
	// 				setDday()
	// 			}
	// 		} else if (ddayNum == 0) {
	// 			var d = timeCheck(b);
	// 			if (ddayCheck(b)) {
	// 				setDday()
	// 			}
	// 			if (d <= 0 && d > -10) {
	// 				notiOnce['before'] = false;
	// 				notiOnce['inviDay'] = false;
	// 				if (notiOnce['now']) {
	// 					notiOnce['now'] = false;
	// 					topNoticeOn(tnArrKeys[1], '예식이 시작되었습니다.', 2000)
	// 				}
	// 			} else if (d > 0 && d <= 30) {
	// 				notiOnce['inviDay'] = false;
	// 				if (notiOnce['before']) {
	// 					notiOnce['before'] = false;
	// 					topNoticeOn(tnArrKeys[1], '예식 ' + d + '분 전 입니다.', 2000)
	// 				}
	// 			} else {
	// 				if (notiOnce['inviDay']) {
	// 					notiOnce['inviDay'] = false;
	// 					topNoticeOn(tnArrKeys[1], '오늘은 예식일 입니다.', 2000)
	// 				}
	// 			}
	// 		} else {
	// 			if (notiOnce['thanks']) {
	// 				notiOnce['thanks'] = false;
	// 				openPopup('thanks')
	// 			}
	// 		}
	// 	}
	// 	update();
	// 	updateGb();
	// 	setTimeout(loopFunction, 100)
	// })();
	resizeScreen();
	resizeScreenGb();
    console.log("4");
	$(window).resize(function () {
		resizeScreen();
		resizeScreenGb()
	});
    console.log("5");
	//if (bgmType) initBgm();
	initTools()
    console.log("6");
    //initTopNotice();
	//hideImage();
	//onloadImage();
};
function initTools() {
	Kakao.init('2abf754e12ceb4f89fa6366f6f77ac40')
}
function hideImage() {
	if (!noValue(wMap)) {
		$('.exMap').css('display', 'none');
		$('.exMap_loading').css('display', 'none')
	}
}
function settingButtons() {
	var b = '';
	$('.div_map .changeMap').click(function () {
		chageMap()
	});
	b = '#popup';
	$(b).click(function (a) {
		if ($(a.target).is(b)) closePopup()
	})
}
var aniTarget;
function readyAni(a, b) {
	if (lastAni != 0) {
		$('#animationBg').addClass('putOnBg_container');
		$('#animationBg').html('<div class="column1"><div></div></div>');
		aniTarget = '#animationBg>div>div';
		var c;
		var d = '';
		for (var i = 0; i <= lastAni; i++) {
			c = String(100000 + i).slice(1);
			c = a + b + '_' + c + '.png';
			d += '<img class="m' + i + ' fit_width"	style="display:none" src="' + c + '"/>'
		}
		$(aniTarget).append(d);
		aniTarget = '#animationBg>div>div>img.m';
		loopAni()
	}
}
var aniLoopTimeout;
var prevAni;
var cntFrame = 0;
function loopAni() {
	$(aniTarget + cntFrame).css('display', '');
	prevAni = cntFrame ? cntFrame - 1 : lastAni;
	if (prevAni >= 0) {
		$(aniTarget + prevAni).css('display', 'none')
	}
	if (cntFrame < lastAni) cntFrame++;
	else cntFrame = 0;
	aniLoopTimeout = setTimeout(loopAni, 50)
}
function chageMap() {
	isControlMap = !isControlMap;
	var a = $('.div_map .exMap');
	var b = $('.div_map .exMap_loading');
	var c = $('.div_map .mapBtns .chgMap_icon');
	var d = $('.div_map .mapBtns .chgMap_txt');
	var e = '';
	if (isControlMap) {
		b.css('display', '');
		a.css('display', '');
		d.html(wMapChg[1]);
		e = replaceStr($('.chgMap_icon').attr('src'), '_zoom', '_fix')
	} else {
		b.css('display', 'none');
		a.css('display', 'none');
		d.html(wMapChg[0]);
		e = replaceStr($('.chgMap_icon').attr('src'), '_fix', '_zoom')
	}
	controlMapLoad();
	c.attr('src', e)
}
function setControlMapSize() {
	var a = $('.div_map .exMap_fix');
	var b = $('.div_map .exMap_loading');
	mapWidth = a.width();
	mapHeight = a.height();
	b.css('height', mapHeight)
}
function controlMapLoad() {
	setControlMapSize();
	if (isControlMap) {
		if (!noValue(mapName)) {
			$('.exMap').html('<div id="' + mapName + 'Map" class="fit_width" style="width:' + mapWidth + 'px;height:' + mapHeight + 'px;"></div>')
		}
		if (mapName == 'kakao') {
			var a = document.getElementById(mapName + 'Map');
			var b = {
				center: new kakao.maps.LatLng(wMap['centerY'], wMap['centerX']),
				level: wMap['level']
			};
			var c = new kakao.maps.Map(a, b);
			var d = wMap['pointer'],
			imageSize = new kakao.maps.Size(wMap['pointerW'], wMap['pointerH']),
			imageOption = {
				offset: new kakao.maps.Point(wMap['pointerInX'], wMap['pointerInY'])
			};
			var e = new kakao.maps.MarkerImage(d, imageSize, imageOption),
			markerPosition = new kakao.maps.LatLng(wLoca['y'], wLoca['x']);
			var f = new kakao.maps.Marker({
				position: markerPosition,
				image: e
			});
			f.setMap(c);
			var g = wLoca['nameHtml'];
			var h = new kakao.maps.LatLng(wLoca['y'], wLoca['x']);
			var i = new kakao.maps.CustomOverlay({
				map: c,
				position: h,
				content: g,
				yAnchor: 3
			})
		} else if (mapName == 'google') {
			var j = wLoca['y'];
			var k = wLoca['x'];
			var l = wMap['level'];
			var m = wLoca['name'];
			var n = mapWidth;
			var o = {
				zoom: l,
				center: new google.maps.LatLng(j, k),
				mapTypeId: google.maps.MapTypeId.ROADMAP
			};
			var c = new google.maps.Map(document.getElementById(mapName + 'Map'), o);
			var p = new google.maps.LatLng(j, k);
			var q = wMap['pointerW'];
			var r = wMap['pointerH'];
			var s = wMap['pointerInX'];
			var t = wMap['pointerInY'];
			var u = {
				url: wMap['pointer'],
				anchor: new google.maps.Point(s, t),
				scaledSize: new google.maps.Size(q, r)
			};
			var f = new google.maps.Marker({
				position: p,
				map: c,
				icon: u,
				visibility: true,
				title: m
			});
			var g = '<div class ="label outline-fff" style="top:0px"><span class="left"></span><span class="center">' + wLoca['name'] + '</span><span class="right"></span></div>';
			var v = new google.maps.InfoWindow({
				content: g,
				maxWidth: n,
			});
			v.open(c, f);
			google.maps.event.addListener(f, 'click', function () {
				v.open(c, f)
			})
		} else if (mapName == 'naver') {
			var j = wLoca['y'];
			var k = wLoca['x'];
			var l = wMap['level'];
			var m = wLoca['name'];
			var n = mapWidth;
			var o = {
				zoom: l,
				center: new naver.maps.LatLng(j, k),
				mapTypeId: naver.maps.MapTypeId.NORMAL
			};
			var c = new naver.maps.Map(document.getElementById(mapName + 'Map'), o);
			var p = new naver.maps.LatLng(j, k);
			var q = wMap['pointerW'];
			var r = wMap['pointerH'];
			var s = wMap['pointerInX'];
			var t = wMap['pointerInY'];
			var u = {
				url: wMap['pointer'],
				anchor: new naver.maps.Point(s, t),
				scaledSize: new naver.maps.Size(q, r)
			};
			var f = new naver.maps.Marker({
				position: p,
				map: c,
				icon: u,
				visible: true,
			});
			var g = '<div class ="label outline-fff"><span class="left"></span><span class="center">' + wLoca['name'] + '</span><span class="right"></span></div>';
			var h = new naver.maps.Point(0, 10);
			var v = new naver.maps.InfoWindow({
				content: g,
				maxWidth: n,
				backgroundColor: "",
				borderColor: "",
				borderWidth: 0,
				anchorSize: new naver.maps.Size(0, 0),
				anchorSkew: false,
				anchorColor: "",
				pixelOffset: h
			});
			v.open(c, f)
		}
	}
}
function ddayCheck(a) {
	var b = new Date(a.getFullYear(), a.getMonth(), a.getDate());
	var c = (Number(oldNowDayTime) != Number(b)) ? true: false;
	if (c && !isSample) {
		ddayNum = thenDayTime - b;
		ddayNum = Math.floor(ddayNum / (1000 * 60 * 60 * 24));
		oldNowDayTime = b
	}
	return c
}
function timeCheck(a) {
	var b;
	if (a == undefined) {
		b = new Date()
	} else {
		b = a
	}
	tNum = goalTime - b;
	tNum = Math.floor(tNum / (1000 * 60));
	return Number(tNum)
}
function ddayTopNotice(a, b) {
	var c = b + '일';
	if (b == 1) {
		c = '하루'
	} else if (b == 2) {
		c = '이틀'
	} else if (b == 7) {
		c = '일주일'
	}
	if (a != undefined) {
		c = a + ' ' + c
	}
	topNoticeOn(tnArrKeys[1], '오늘은 ' + c + ' 전 입니다.', 2000)
}
function setDday() {
	var a;
	var b, str1x;
	var c = Number($('.group_dday').attr('data-ddayValue'));
	if (ddayNum < c) {}
}
var noticeTimeout, noticeCompleteTimeout, tnHeight, isTopNoticeOn = false;
var tnMsgTarget, tnWrapperTarget;
var tnArrKeys = new Array('', 'default', 'bgm', 'realMovie');
var tnPool = [];
var tnOpened;
function initTopNotice() {
	tnWrapperTarget = $('#group_topNotice>.topNotice>.wrapper');
	tnMsgTarget = $('#group_topNotice>.topNotice .text');
	tnWrapperTarget.addClass('onAni_075')
}
function topNoticeOn(a, b, c) {
	isTopNoticeOn = true;
	clearTimeout(noticeTimeout);
	setTopNotice(a);
	tnOpened = a;
	if (!noValue(b)) tnMsgTarget.html(b);
	if (!noValue(c)) noticeTimeout = setTimeout("topNoticeOff()", c)
}
function topNoticeOff() {
	clearTimeout(noticeTimeout);
	setTopNotice(undefined);
	if (!noValue(tnOpened) && tnOpened != 'default') {
		eval(tnOpened + 'NoticeOff();')
	}
	tnOpened = undefined;
	noticeCompleteTimeout = setTimeout('topNoticeOffComplete()', 750)
}
function topNoticeOffComplete() {
	clearTimeout(noticeCompleteTimeout);
	isTopNoticeOn = false;
	if (tnPool.length > 0) {
		eval(tnPool[0]['funcName'] + '(\'' + tnPool[0]['msg'] + '\',' + tnPool[0]['num'] + ')');
		tnPool.shift()
	}
}
function topNoticeAddPull(a, b, c) {
	var d = [];
	d['funcName'] = a;
	d['msg'] = b;
	d['num'] = c;
	tnPool.push(d)
}
function setTopNotice(a) {
	if (tnOpened != a) {
		if (isTopNoticeOn) {
			tnWrapperTarget.removeClass(tnOpened + 'H')
		} else {
			tnWrapperTarget.removeClass('initH')
		}
		if (!noValue(a)) {
			tnWrapperTarget.addClass(a + 'H')
		} else {
			tnWrapperTarget.addClass('initH')
		}
	}
}
function naviSet(a) {
	naviDelayCnt = naviDelay;
	iyScrollTo('.group_' + a + ' .scrollStop')
}
function initBgm() {
	if ($('#group_bgm>audio>source').attr('src') == '') {
		topNoticeOn(tnArrKeys[1], '배경음악 음원이 없습니다.', bgmFirstNoticeTime)
	} else {
		bgm = $('#group_bgm>audio');
		bgmBtn = $('#group_bgm .bgmBtnBox');
		bgm.trigger('load');
		bgm.bind("canplaythrough", canPlayThrough())
	}
}
function canPlayThrough() {
	canBgmPlayThrough = true;
	var b = '배경음악이 준비되었습니다.';
	if (isBgmAutoplay) {
		var c = bgm[0].play();
		if (c !== undefined) {
			c.then(function () {
				bgm[0].pause();
				b = '배경음악을 재생합니다.';
				bgmNoticeOn(b, bgmFirstNoticeTime)
			}).
			catch(function (a) {
				isBgmAutoplay = false;
				bgmNoticeOn(b, bgmFirstNoticeTime)
			})
		} else {
			isBgmAutoplay = false;
			bgmNoticeOn(b, bgmFirstNoticeTime)
		}
	} else {
		bgmNoticeOn(b, bgmFirstNoticeTime)
	}
}
function bgmToggle() {
	naviDelayCnt = naviDelay;
	if (isBgmPlaying) bgmStop();
	else bgmStart()
}
function bgmStart() {
	if (canBgmPlayThrough) {
		if (!isBgmPlaying) {
			bgm[0].play();
			bgmPlayIcon(true);
			bgm.prop('volume', 0.1);
			bgmVolumeIncrease(0.1);
			isBgmPlaying = true
		}
	} else {
		var a = '배경음악을 불러오는 중입니다.';
		topNoticeOn(tnArrKeys[1], a, bgmFirstNoticeTime)
	}
}
function bgmStop() {
	if (!canBgmPlayThrough) {
		isBgmAutoplay = false
	} else {
		if (isBgmPlaying) {
			bgm[0].pause();
			bgmPlayIcon(false);
			isBgmPlaying = false
		}
	}
}
function bgmPlayIcon(a) {
	if (bgmBtn.css('display') == 'none') bgmBtn.show();
	if (a) {
		$('.bgmBtnBg>.stopIcon').show();
		$('.bgmBtnBg>.playIcon').hide()
	} else {
		$('.bgmBtnBg>.stopIcon').hide();
		$('.bgmBtnBg>.playIcon').show()
	}
}
var bgmNoticeCnt = 1;
function bgmNoticeOn(a, b) {
	if (isTopNoticeOn) {
		topNoticeAddPull('bgmNoticeOn', a, b)
	} else {
		if (bgmNoticeCnt) {
			bgmPlayIcon(false);
			topNoticeOn(tnArrKeys[2], a, b);
			bgmNoticeMotion('on');
			bgmNoticeCnt--
		}
		if (a == '배경음악을 재생합니다.') {
			bgmStart()
		}
	}
}
function bgmNoticeOff() {
	bgmNoticeMotion('off')
}
var isBgmNoticeMotionOn = false;
function bgmNoticeMotion(a) {
	if (a == 'on' && isBgmNoticeMotionOn == false) {
		var b = $('.content_bg').outerWidth() - 48;
		var c = tnMsgTarget.outerWidth();
		var d = parseInt((b - c) * 0.5);
		if (d < 8) d = 8;
		$('#group_bgm .bgmBtnBox').css('right', d + 'px');
		isBgmNoticeMotionOn = true
	} else if (a == 'off' && isBgmNoticeMotionOn == true) {
		isBgmNoticeMotionOn = false;
		$('#group_bgm .bgmBtnBox').css('right', '8px');
		setTimeout('$("#group_bgm>div").css("display",$("#group_navi").css("display"))', 1000)
	}
}
function bgmVolumeIncrease(a) {
	var b = bgm.prop('volume') + a;
	if (b > 0.9) {
		b = 1;
		return
	} else setTimeout("bgmVolumeIncrease(" + a + ")", 1000);
	bgm.prop('volume', b)
}
var isInviDay, isInviReady, isInviTime;
function inviDayNoticeOn(a, b) {
	if (isTopNoticeOn) {
		topNoticeAddPull('inviDayNoticeOn', a, b)
	} else {
		topNoticeOn(tnArrKeys[1], a, 2000)
	}
}
function inviDayNoticeOff() {}
var popupOpenChk = false;
function openPopup(a, b) {
	if (!$('#popup .' + a).length) {
		return
	}
	if (cellularNum == 0 && a == 'cellular') {
		return
	}
	if ($('#popup').css('display') == 'none') {
		$('#popup').fadeIn('fast')
	}
	$('#popup .tapBar>ul>li').removeClass('seled');
	$('#popup .content>div').css('display', 'none');
	$('#popup .tapBar .menu_' + a).addClass('seled');
	$('#popup .' + a).css('display', 'block');
	if (!noValue(b) && a == 'cellular') {
		settingCellular(b)
	}
	setTimeout(function () {
		popupOpenChk = true
	},
	1000)
}
function closePopup() {
	if (popupOpenChk) {
		if ($('#popup').css('display') != 'none') $('#popup').fadeOut('fast');
		seledConnect = '';
		$('#popup .cellular .item .seled').remove();
		popupOpenChk = false
	}
}
function settingCellular(a) {
	var b = '#popup .cellular ';
	var c = true;
	if (oneCellular != '') {
		a = 'h' + oneCellular
	} else {
		if (noValue(a)) {
			if (seledConnect == '') c = false;
			else a = seledConnect
		} else {
			if (a == seledConnect) c = false;
			$(b + '.item .seled').remove()
		}
	}
	if (c) {
		var d = window[a];
		if (d['tel'] == 'none' && d['msg'] == 'none') {
			c = false
		}
	}
	if (c) {
		$(b + '.guide').css('display', 'none');
		$(b + '.confirm>.separate_hr').css('display', 'block');
		if (oneCellular == '') {
			btnStatus(b + '.item .wrapper', 9, 1);
			btnStatus(b + '.' + a, 1);
			$(b + '.item .seled').remove();
			$(b + '.item .' + a + ' a>div').append('<div class="seled"></div>')
		}
		if (d['tel'] != 'none') {
			btnStatus(b + '.confirm .call', 1);
			$(b + '.confirm .call a').attr('href', 'tel:' + d['tel'])
		} else {
			btnStatus(b + '.confirm .call', 0)
		}
		if (d['msg'] != 'none') {
			btnStatus(b + '.confirm .message', 1);
			$(b + '.confirm .message a').attr('href', 'sms:' + d['msg'])
		} else {
			btnStatus(b + '.confirm .message', 0)
		}
		if (d['tel'] != 'none' && d['msg'] != 'none') {
			$(b + '.confirm .separate_item').css('display', 'inline-block')
		} else {
			$(b + '.confirm .separate_item').css('display', 'none')
		}
		seledConnect = a
	} else {
		$(b + '.guide').css('display', 'block');
		$(b + '.confirm>.separate_hr').css('display', 'none');
		$(b + '.confirm .separate_item').css('display', 'none');
		btnStatus(b + '.item .wrapper', 1);
		btnStatus(b + '.confirm>ul>li', 0);
		seledConnect = ''
	}
}
function btnStatus(a, b, c) {
	switch (b) {
	case 0:
		$(a).css('display', 'none');
		$(a).css('opacity', '1');
		if (c == undefined) $(a).css('pointer-events', 'auto');
		break;
	case 1:
		if ($(a).css('display') == 'none') $(a).css('display', 'inline-block');
		$(a).css('opacity', '1');
		if (c == undefined) $(a).css('pointer-events', 'auto');
		break;
	case 9:
		if ($(a).css('display') == 'none') $(a).css('display', 'inline-block');
		$(a).css('opacity', '0.3');
		if (c == undefined) $(a).css('pointer-events', 'none');
		break
	}
	if (c != undefined) {
		var d = (c == 0) ? 'none': 'auto';
		$(a).css('pointer-events', d)
	}
}
console.log(wLoca);
var naviName = '';
var naviX = 0;
var naviY = 0;
console.log(naviX, naviY);
function connect_kakaoNavi() {
	if (wLoca['name'] == '' && wLoca['pName'] == '') {
		console.log('카카오내비 장소명이 없습니다.');
		return
	} else {
		naviName = (wLoca['pName'] == '') ? wLoca['name'] : wLoca['pName']
	}
	if (wLoca['x'] == '' && wLoca['pX'] == '') {
		console.log('카카오내비 경도값이 없습니다.');
		return
	} else {
		naviX = (wLoca['pX'] == 0) ? wLoca['x'] : wLoca['pX']
	}
	if (wLoca['y'] == '' && wLoca['pY'] == '') {
		console.log('카카오내비 위도값이 없습니다.');
		return
	} else {
		naviY = (wLoca['pY'] == 0) ? wLoca['y'] : wLoca['pY']
	}
	Kakao.Navi.start({
		name: naviName,
		x: naviX,
		y: naviY,
		coordType: 'wgs84'
	})
}
function connect_naverNavi() {
	if (wLoca['name'] == '' && wLoca['pName'] == '') {
		console.log('네이버내비 장소명이 없습니다.');
		return
	} else {
		naviName = (wLoca['pName'] == '') ? wLoca['name'] : wLoca['pName']
	}
	if (wLoca['x'] == '' && wLoca['pX'] == '') {
		console.log('네이버내비 경도값이 없습니다.');
		return
	} else {
		naviX = (wLoca['pX'] == 0) ? wLoca['x'] : wLoca['pX']
	}
	if (wLoca['y'] == '' && wLoca['pY'] == '') {
		console.log('네이버내비 위도값이 없습니다.');
		return
	} else {
		naviY = (wLoca['pY'] == 0) ? wLoca['y'] : wLoca['pY']
	}
	var a = 'http://app.map.naver.com/launchApp/?version=11&menu=navigation&';
	a += 'elat=' + naviY + '&elng=' + naviX;
	a += '&etitle=' + encodeURIComponent(naviName);
	window.open(a, '', 'width=750,height=400,scrollbars=yes,resizable=auto')
}
function connect_facebook() {
	var a = 'http://www.facebook.com/sharer.php';
	a += '?u=' + facebook['href'];
	window.open(a, '', 'width=750,height=400,scrollbars=yes,resizable=auto')
}
function connect_kakaoTalk() {
	if (kakaoTalk['templateType'] != undefined && kakaoTalk['wFd'] != undefined && kakaoTalk['imageW'] != undefined && kakaoTalk['imageH'] != undefined) {
		if (kakaoTalk['templateType'] == "default") {
			Kakao.Link.sendDefault({
				objectType: 'feed',
				content: {
					title: kakaoTalk['msgTitle'],
					description: kakaoTalk['msgDescription'],
					imageUrl: kakaoTalk['image'],
					imageWidth: kakaoTalk['imageW'],
					imageHeight: kakaoTalk['imageH'],
					link: {
						mobileWebUrl: kakaoTalk['url'],
						webUrl: kakaoTalk['url']
					}
				},
				buttons: [{
					title: kakaoTalk['btnLabel'],
					link: {
						mobileWebUrl: kakaoTalk['url'],
						webUrl: kakaoTalk['url']
					}
				}]
			})
		} else if (kakaoTalk['templateType'] == "addLink") {
			var a = kakaoTalk['btn2Label'];
			var b = kakaoTalk['btn2Url'];
			var c = kakaoTalk['btn2Url_mobile'];
			if (noValue(a)) a = '버튼명 없음';
			if (noValue(b)) {
				if (!noValue(c)) b = c;
				else {
					alert('2번째버튼 연결이 없습니다.');
					return
				}
			} else if (noValue(c)) c = b;
			Kakao.Link.sendDefault({
				objectType: 'feed',
				content: {
					title: kakaoTalk['msgTitle'],
					description: kakaoTalk['msgDescription'],
					imageUrl: kakaoTalk['image'],
					imageWidth: kakaoTalk['imageW'],
					imageHeight: kakaoTalk['imageH'],
					link: {
						mobileWebUrl: kakaoTalk['url'],
						webUrl: kakaoTalk['url']
					}
				},
				buttons: [{
					title: kakaoTalk['btnLabel'],
					link: {
						mobileWebUrl: kakaoTalk['url'],
						webUrl: kakaoTalk['url']
					}
				},
				{
					title: a,
					link: {
						mobileWebUrl: c,
						webUrl: b
					}
				}]
			})
		} else if (kakaoTalk['templateType'] == "location") {
			Kakao.Link.sendDefault({
				objectType: 'location',
				address: wLoca['address'],
				addressTitle: wLoca['name'],
				content: {
					title: kakaoTalk['msgTitle'],
					description: kakaoTalk['msgDescription'],
					imageUrl: kakaoTalk['image'],
					imageWidth: kakaoTalk['imageW'],
					imageHeight: kakaoTalk['imageH'],
					link: {
						mobileWebUrl: kakaoTalk['url'],
						webUrl: kakaoTalk['url']
					}
				},
				buttons: [{
					title: kakaoTalk['btnLabel'],
					link: {
						mobileWebUrl: kakaoTalk['url'],
						webUrl: kakaoTalk['url']
					}
				}]
			})
		} else alert('카카오링크 템플릿이 존재하지 않습니다.')
	} else alert('카카오톡 연결에 실패하였습니다.')
}
function connect_kakaoStory() {
	Kakao.Story.open({
		url: kakaoStory['url'],
		text: kakaoStory['text']
	})
}
function connect_naverLine() {
	var a = 'http://line.me/R/msg/text/';
	a += '?' + encodeURIComponent(naverLine['text']);
	window.open(a, '', 'width=750,height=400,scrollbars=yes,resizable=auto')
}
function connect_naverBand() {
	var a = 'http://band.us/plugin/share';
	a += '?route=' + naverBand['route'];
	a += '&body=' + encodeURIComponent(naverBand['text']);
	window.open(a, '', 'width=750,height=400,scrollbars=yes,resizable=auto')
}
function connect_twitter() {
	var a = 'https://twitter.com/intent/tweet';
	a += '?url=' + encodeURIComponent(twitter['url']);
	a += '&text=' + encodeURIComponent(twitter['text']);
	window.open(a, '', 'width=750,height=400,scrollbars=yes,resizable=auto')
}
function connect_message() {
	var a = 'sms:';
	if (message['target'] == undefined) {
		a += '000'
	} else {
		a += message['target']
	}
	a += message['bridge'] + 'body=';
	a += encodeURIComponent(message['text']);
	a += ' ' + encodeURIComponent(message['url']);
	window.open(a, '', 'width=750,height=400,scrollbars=yes,resizable=auto')
}
var infoListItem = '.group_information .info_list .item';
function infoSelect(a, b) {
	var c = infoListItem + a;
	var d = c + ' .info_content';
	if ($(d).hasClass('fixed')) {
		iyScrollTo(c)
	} else {
		if ($(d).css('display') == 'none') {
			infoToggle(false, infoListItem, '.flexible', b * 0.5);
			infoToggle(true, c, '.flexible', b)
		} else {
			infoToggle(false, c, '.flexible', b)
		}
	}
}
function infoFixedToggle(a, b) {
	event.stopPropagation();
	var c = infoListItem + a;
	var d = c + ' .info_content';
	var e = c + ' .info_title .arrow';
	if ($(d).hasClass('fixed')) {
		$(e).removeClass('hide');
		$(d).removeClass('fixed');
		$(d).addClass('flexible');
		infoToggle(false, c, '.flexible', b)
	} else {
		$(e).addClass('hide');
		$(d).removeClass('flexible');
		$(d).addClass('fixed');
		infoToggle(true, c, '.fixed', b)
	}
}
function infoToggle(a, b, c, d) {
	var e = b + ' .info_title .arrow';
	var f = b + ' .info_content' + c;
	if (a) {
		$(f).show(d);
		$(e).css('transform', 'rotate(180deg)');
		setTimeout(function () {
			iyScrollTo(b)
		},
		d * 0.5)
	} else {
		$(f).hide(d);
		$(e).css('transform', 'rotate(0deg)')
	}
}
function adjustRetina() {
	isRetina = (window.devicePixelRatio > 1);
	if (!isSolvedRetina) {
		if (isRetina) {
			if (!noValue(aniPath)) aniPath += '@2x/';
			$('img').each(function (i) {
				if (!$(this).hasClass('retina')) {
					var a = true;
					var b = $(this).attr('src');
					var c = b.split('.').pop();
					if ($(this).parent().parent().attr('id') == 'fotorama') {
						a = false
					}
					if ($(this).hasClass('pswp__img')) {
						a = false
					}
					if (c == 'svg') {
						$(this).addClass(c);
						a = false
					}
					if (a) {
						var d;
						if (c == 'png') d = b.replace(".png", "@2x.png");
						else if (c == 'gif') d = b.replace(".gif", "@2x.gif");
						else if (c == 'jpg') d = b.replace(".jpg", "@2x.jpg");
						$(this).attr('src', d)
					}
				}
			})
		}
		isSolvedRetina = true
	}
}
function replaceStr(a, b, c) {
	return a.replace(b, c)
}
function iyScrollTo(a) {
	if (isNaN(a)) {
		var b = $(a).offset().top
	} else {
		var b = a
	}
	pageScrollAni(b)
}
function pageScrollAni(a, b) {
	if (b == undefined) b = 'html, body';
	$(b).animate({
		scrollTop: a
	},
	500)
}
function displayOnOff(a) {
	var b = $(a);
	if (b.css('display') == 'none') {
		b.css('display', '')
	} else {
		b.css('display', 'none')
	}
	pageScrollAni(document.body.scrollHeight)
}
function copyClipboard(a, b) {
	var c = document.getElementById(a);
	c.select();
	document.execCommand("copy");
	clearAllSelection();
	if (!noValue(b)) {
		b = b.replace('(@copyedText@)', c.value);
		modalAlert(b, false)
	}
}
function modalAccount(a, b, c, d) {
	var e = '#modalAlert .acModal_remit';
	var f = '계좌번호 숫자가 복사되었습니다.';
	$(e + ' .ac_number .bank').html(a + ' ' + b + ' 계좌번호');
	$(e + ' .ac_number .number').html(c);
	$(e + ' .ac_number .msg').html(f);
	if (!noValue(d)) {
		$(e + ' .ac_btns').removeClass('hide');
		$(e + ' .ac_btns').append('<div></hr></div>');
		$(e + ' .ac_btns .kakaoPay').removeClass('hide');
		$(e + ' .ac_btns .kakaoPay').attr('href', d)
	} else {
		$(e + ' .ac_btns').addClass('hide');
		$(e + ' .ac_btns').append('');
		$(e + ' .ac_btns .kakaoPay').addClass('hide');
		$(e + ' .ac_btns .kakaoPay').attr('href', '')
	}
}
function clearAllSelection() {
	if (window.getSelection) {
		if (window.getSelection().empty) {
			window.getSelection().empty()
		} else if (window.getSelection().removeAllRanges) {
			window.getSelection().removeAllRanges()
		}
	} else if (document.selection) {
		document.selection.empty()
	}
}
function modalAlert(a, w) {
	if (!w) {
		w = '306px'
	}
	$('#modalAlert>.modal-dialog').css('width', w);
	$('#modalAlert .modal-body').html(a)
}
function imgBoxCenterAlign(a, b, c, d) {
	var e = (d / c).toFixed(3);
	var f = b;
	var g = parseInt(e * parseInt(f, 10));
	$(a).css({
		'object-fit': 'contain',
		'width': f,
		'height': g,
	})
}
function noValue(a) {
	var b = $.trim(a);
	if (b == '' || b == undefined) return true;
	else return false
}
function initScreen() {}
function resizeScreen() {}
function update() {}
function updateGb() {}
function initScreenGb() {}
function resizeScreenGb() {}
function onloadImage() {}